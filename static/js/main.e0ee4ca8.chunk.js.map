{"version":3,"sources":["globalStyles.js","assets/img/banner.png","components/Banner.js","components/Card.js","components/Slideshow.js","hooks/useFetch.js","hooks/useFilters.js","constants.js","hooks/useGetCharacters.js","hooks/useGetLocations.js","hooks/useGetEpisodes.js","pages/Index.js","components/Pagination.js","components/Title.js","components/SearchBar.js","pages/Characters.js","pages/Locations.js","pages/Episodes.js","assets/img/logo.png","components/Navbar.js","components/Footer.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","Section","section","props","black","BannerContainer","BannerImage","img","Banner","src","banner","alt","CardsContainer","Card","row","css","CardImageContainer","CardBody","CardSection","CardTitle","h5","CardText","p","CardTextGray","CardStatusIcon","span","status","Slideshow","children","controles","autoplay","velocidad","intervalo","slideshow","useRef","intervaloSlideshow","siguiente","useCallback","current","length","primerElemento","style","transition","tama√±oSlide","offsetWidth","transform","addEventListener","transicion","appendChild","removeEventListener","useEffect","setInterval","clearInterval","ContenedorPrincipal","ContenedorSlideshow","ref","Controles","Boton","onClick","index","ultimoElemento","insertBefore","firstChild","setTimeout","icon","faChevronLeft","derecho","faChevronRight","Slide","colorFondo","colorTexto","button","TituloSlideshow","localCache","useFetch","url","useState","data","isLoading","hasError","error","state","setState","getFetch","a","fetch","response","ok","code","message","statusText","json","console","log","useFilters","currentPage","setCurrentPage","name","setName","changePage","page","searchByName","URL_BASE","URL_CHARACTERS","URL_EPISODES","URL_LOCATIONS","FILTERS_PAGE","FILTERS_NAME","useGetCharacters","pages","totalCount","characters","setCharacters","results","info","count","updateData","useGetLocations","locations","setLocations","useGetEpisodes","episodes","setEpisodes","Index","map","character","image","location","dimension","type","episode","air_date","ButtonContainer","Button","active","Pagination","arrayNumberOfPages","i","push","onChangePage","event","pageNumber","Number","target","textContent","window","scrollTo","slice","item","Title","h2","TitleContainer","Search","form","Input","input","Icon","SearchBar","searchValue","setSearchValue","onSubmit","e","preventDefault","id","value","onChange","faSearch","Characters","species","origin","Locations","useGetLocation","Episodes","Nav","NavLogo","Hamburger","Menu","isOpen","NavLink","Link","Navbar","setIsOpen","to","logo","faTimes","faBars","ContainerFooter","footer","ContainerIcons","List","ul","Text","Underline","Footer","totalCountCharacters","totalCountLocations","totalCountEpisodes","href","faGithub","faEnvelope","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0ee4ca8.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: 'PT Sans', sans-serif;\r\n        scroll-behavior: smooth;\r\n    } \r\n`;\r\n\r\nexport const Container = styled.div`\r\n    width: 90%;\r\n    max-width: 1300px;\r\n    margin: auto;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n    width: 100%;\r\n    background: ${(props) => props.black ? \"rgb(36,40,47)\" : \"white\"};\r\n    padding: 70px 0;\r\n`;\r\n\r\nexport default GlobalStyle;","export default __webpack_public_path__ + \"static/media/banner.de13d484.png\";","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n//assets\r\nimport banner from '../assets/img/banner.png';\r\n\r\nconst BannerContainer = styled.div`\r\n    text-align: center;\r\n    margin: 60px 0px;\r\n    background-color: white;\r\n\r\n`;\r\n\r\nconst BannerImage = styled.img`\r\n    width: 100%;\r\n    max-width: 622px;\r\n    height: auto;\r\n`;\r\n\r\nconst Banner = () => {\r\n    return(\r\n        <BannerContainer>\r\n            <BannerImage src={banner} alt=\"rick and morty\"/>\r\n        </BannerContainer>\r\n    );\r\n}\r\n\r\nexport default Banner;","import styled, { css } from \"styled-components\";\r\n\r\nconst CardsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Card = styled.div`\r\n    background: rgb(60, 62, 68);\r\n    width: 300px;\r\n    overflow: hidden;\r\n    border-radius: 5px;\r\n    margin: 10px 5px;\r\n\r\n    ${props => props.row && css`\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 600px;\r\n        height: 220px;\r\n        margin: 10px;\r\n\r\n        @media screen and (max-width:500px) {\r\n            flex-direction: column;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    `}\r\n`;\r\n\r\nconst CardImageContainer = styled.div`\r\n    flex: 2 1 0%;\r\n    width: 100%;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n    flex: 3 1 0%;\r\n    width: 100%;\r\n    padding: 0.75rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: left;\r\n`;\r\n\r\nconst CardSection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst CardTitle = styled.h5`\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    height: 50px;\r\n    color: white;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardText  = styled.p`\r\n    line-height: 25px;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst CardTextGray = styled.p`\r\n    color: rgb(158, 158, 158);\r\n    font-size: 0.9375rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst CardStatusIcon = styled.span`\r\n    height: 0.5rem;\r\n    width: 0.5rem;\r\n    margin-right: 0.375rem;\r\n    border-radius: 50%;\r\n\r\n    ${props => props.status === \"Alive\" && \"background: rgb(85, 204, 68)\"}\r\n    ${props => props.status === \"Dead\" && \"background: rgb(214, 61, 46)\"}\r\n    ${props => props.status === \"unknown\" && \"background: rgb(158, 158, 158)\"}\r\n`;\r\n\r\nexport { CardsContainer, Card, CardImageContainer, CardBody, CardSection, CardTitle, CardText, CardTextGray, CardStatusIcon };","import React, {useRef, useEffect, useCallback} from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Slideshow = ({\r\n\t\tchildren,\r\n\t\tcontroles = true,\r\n\t\tautoplay = false,\r\n\t\tvelocidad=\"500\",\r\n\t\tintervalo=\"5000\"\r\n\t}) => {\r\n\tconst slideshow = useRef(null);\r\n\tconst intervaloSlideshow = useRef(null);\r\n\r\n\tconst siguiente = useCallback(() => {\r\n\t\t// Comprobamos que el slideshow tenga elementos\r\n\t\tif(slideshow.current.children.length > 0){\r\n\r\n\t\t\t// Obtenemos el primer elemento del slideshow.\r\n\t\t\tconst primerElemento = slideshow.current.children[0];\r\n\r\n\t\t\t// Establecemos la transicion para el slideshow.\r\n\t\t\tslideshow.current.style.transition = `${velocidad}ms ease-out all`;\r\n\r\n\t\t\tconst tama√±oSlide = slideshow.current.children[0].offsetWidth;\r\n\r\n\t\t\t// Movemos el slideshow\r\n\t\t\tslideshow.current.style.transform = `translateX(-${tama√±oSlide}px)`;\r\n\r\n\t\t\tconst transicion = () => {\r\n\t\t\t\t// Reiniciamos la posicion del Slideshow.\r\n\t\t\t\tslideshow.current.style.transition = 'none';\r\n\t\t\t\tslideshow.current.style.transform = `translateX(0)`;\r\n\r\n\t\t\t\t// Tomamos el primer elemento y lo mandamos al final.\r\n\t\t\t\tslideshow.current.appendChild(primerElemento);\r\n\r\n\t\t\t\tslideshow.current.removeEventListener('transitionend', transicion);\r\n\t\t\t}\r\n\r\n\t\t\t// Eventlistener para cuando termina la animacion.\r\n\t\t\tslideshow.current.addEventListener('transitionend', transicion);\r\n\r\n\t\t}\r\n\t}, [velocidad]);\r\n\t\r\n\tconst anterior = () => {\r\n\t\tif(slideshow.current.children.length > 0){\r\n\t\t\t// Obtenemos el ultimo elemento del slideshow.\r\n\t\t\tconst index = slideshow.current.children.length - 1;\r\n\t\t\tconst ultimoElemento = slideshow.current.children[index];\r\n\t\t\tslideshow.current.insertBefore(ultimoElemento, slideshow.current.firstChild);\r\n\t\t\t\r\n\t\t\tslideshow.current.style.transition = 'none';\r\n\t\t\tconst tama√±oSlide = slideshow.current.children[0].offsetWidth;\r\n\t\t\tslideshow.current.style.transform = `translateX(-${tama√±oSlide}px)`;\r\n\t\t\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tslideshow.current.style.transition = `${velocidad}ms ease-out all`;\r\n\t\t\t\tslideshow.current.style.transform = `translateX(0)`;\r\n\t\t\t}, 30);\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(autoplay){\r\n\t\t\tintervaloSlideshow.current = setInterval(() => {\r\n\t\t\t\tsiguiente();\r\n\t\t\t}, intervalo);\r\n\t\r\n\t\t\t// Eliminamos los intervalos\r\n\t\t\tslideshow.current.addEventListener('mouseenter', () => {\r\n\t\t\t\tclearInterval(intervaloSlideshow.current);\r\n\t\t\t});\r\n\t\r\n\t\t\t// Volvemos a poner el intervalo cuando saquen el cursor del slideshow\r\n\t\t\tslideshow.current.addEventListener('mouseleave', () => {\r\n\t\t\t\tintervaloSlideshow.current = setInterval(() => {\r\n\t\t\t\t\tsiguiente();\r\n\t\t\t\t}, intervalo);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => clearInterval(intervaloSlideshow.current);\r\n\t}, [autoplay, intervalo, siguiente]);\r\n\r\n\treturn (\r\n\t\t<ContenedorPrincipal>\r\n\t\t\t<ContenedorSlideshow ref={slideshow}>\r\n\t\t\t\t{children}\r\n\t\t\t</ContenedorSlideshow>\r\n\t\t\t{controles && <Controles>\r\n\t\t\t\t<Boton onClick={anterior}>\r\n                    <FontAwesomeIcon icon={faChevronLeft}/>\r\n\t\t\t\t</Boton>\r\n\t\t\t\t<Boton derecho onClick={siguiente}>\r\n                    <FontAwesomeIcon icon={faChevronRight}/>\r\n\t\t\t\t</Boton>\r\n\t\t\t</Controles>}\r\n\t\t</ContenedorPrincipal>\r\n\t);\r\n}\r\n\r\nconst ContenedorPrincipal = styled.div`\r\n\tposition: relative;\r\n`;\r\n\r\nconst ContenedorSlideshow = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: nowrap;\r\n`;\r\n\r\nconst Slide = styled.div`\r\n\tmin-width: 20%;\r\n\toverflow: hidden;\r\n\ttransition: .3s ease all;\r\n\tz-index: 10;\r\n\t/* max-height: 500px; */\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\r\n\t@media screen and (max-width: 900px) {\r\n\t\tmin-width: 25%;\r\n\t}\r\n\r\n\t@media screen and (max-width: 750px) {\r\n\t\tmin-width: 33%;\r\n\t}\r\n\r\n\t@media screen and (max-width: 600px) {\r\n\t\tmin-width: 50%;\r\n\t}\r\n`;\r\n\r\nconst TextoSlide = styled.div`\r\n\tbackground: ${props => props.colorFondo ? props.colorFondo : 'rgba(0,0,0,.3)'};\r\n\tcolor: ${props => props.colorTexto ? props.colorTexto : '#fff'};\r\n\twidth: 100%;\r\n\tpadding: 10px 60px;\r\n\ttext-align: center;\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\r\n\t@media screen and (max-width: 700px) {\r\n\t\tposition: relative;\r\n\t\tbackground: #000;\r\n\t}\r\n`;\r\n\r\nconst Controles = styled.div`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tz-index: 20;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n\tpointer-events: all;\r\n\tbackground: rgba(0,0,0,.1);\r\n\tborder: none;\r\n\tcursor: pointer;\r\n\toutline: none;\r\n\twidth: 50px;\r\n\theight: 100%;\r\n\ttext-align: center;\r\n\tposition: absolute;\r\n\ttransition: .3s ease all;\r\n\tfont-size: 25px;\r\n\r\n\tpath {\r\n\t\tfill: rgba(255,255,255,.2);\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tbackground: rgba(0,0,0,.4);\r\n\t\tpath {\r\n\t\t\tfill: rgba(255,255,255,1);\r\n\t\t}\r\n\t}\r\n\r\n\tpath {\r\n\t\tfilter: ${props => props.derecho ? 'drop-shadow(-2px 0px 0px #fff)' : 'drop-shadow(2px 0px 0px #fff)'};\r\n\t}\r\n\r\n\t${props => props.derecho ? 'right: 0' : 'left: 0'}\r\n`;\r\n\r\nconst TituloSlideshow = styled.p`\r\n\tfont-size: 1.25rem;\r\n\tfont-weight: 700;\r\n\ttext-transform: uppercase;\r\n\tmargin-bottom: 10px;\r\n\tcolor: white;\r\n\tletter-spacing: 2px;\r\n`;\r\n \r\nexport {Slideshow, TituloSlideshow, Slide, TextoSlide};","import { useEffect, useState } from \"react\"\r\n\r\nconst localCache = {};\r\n\r\nconst useFetch = (url) => {\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        isLoading: true,\r\n        hasError: false,\r\n        error: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        getFetch();\r\n        \r\n    }, [url]);\r\n\r\n    const setLoadingState = () => {\r\n        setState({\r\n            data: null,\r\n            isLoading: true,\r\n            hasError: false,\r\n            error: null\r\n        })\r\n    }\r\n\r\n    const getFetch = async () => {\r\n\r\n        // Usar cach√© en caso de existir\r\n        if( localCache[url] ) {\r\n            setState({\r\n                data: localCache[url],\r\n                isLoading: false,\r\n                hasError: false,\r\n                error: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Limpiar data\r\n        setLoadingState();\r\n\r\n        const response = await fetch(url);\r\n\r\n        // Si hay alg√∫n error al ejecutar la petici√≥n\r\n        if( !response.ok) {\r\n            setState({\r\n                data: null,\r\n                isLoading: false,\r\n                hasError: true,\r\n                error: {\r\n                    code: response.status,\r\n                    message: response.statusText\r\n                }\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        // Si no hay error extraer data\r\n        const data = await response.json();\r\n        console.log(\"response\", data)\r\n        setState({\r\n            data: data,\r\n            isLoading: false,\r\n            hasError: false,\r\n            error: null\r\n        })\r\n        \r\n        // Manejo de cach√©\r\n        localCache[url] = data;\r\n    }\r\n    \r\n\r\n    return {\r\n        data: state.data,\r\n        isLoading: state.isLoading,\r\n        hasError: state.hasError\r\n    }\r\n}\r\n\r\nexport default useFetch","import { useState } from \"react\";\r\n\r\nconst useFilters = () => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const changePage = (page) => {\r\n        setCurrentPage(page);\r\n    }\r\n\r\n    const searchByName = (name) => {\r\n        setName(name);\r\n        changePage(1);\r\n    }\r\n\r\n    return {currentPage, name, changePage, searchByName}\r\n}\r\n\r\nexport default useFilters","export const URL_BASE = \"https://rickandmortyapi.com/api/\";\r\nexport const URL_CHARACTERS = `${URL_BASE}character`;\r\nexport const URL_EPISODES = `${URL_BASE}episode`;\r\nexport const URL_LOCATIONS = `${URL_BASE}location`;\r\n\r\nexport const FILTERS_PAGE = \"page\";\r\nexport const FILTERS_NAME = \"name\";\r\n","import { useState, useEffect } from 'react';\r\nimport useFetch from './useFetch';\r\nimport useFilters from './useFilters';\r\nimport { URL_CHARACTERS, FILTERS_NAME, FILTERS_PAGE } from '../constants';\r\n\r\nconst useGetCharacters = () => {\r\n    const { currentPage, name, changePage, searchByName } = useFilters();\r\n    const { data, isLoading } = useFetch(`${URL_CHARACTERS}?${FILTERS_PAGE}=${currentPage}&${FILTERS_NAME}=${name}`);\r\n    const [characters, setCharacters] = useState({\r\n        data: [],\r\n        pages: 0,\r\n        totalCount: 0\r\n    })\r\n\r\n    const updateData = () => {\r\n        setCharacters({\r\n            data: data?.results,\r\n            pages: data?.info?.pages,\r\n            totalCount: data?.info?.count\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [data])\r\n\r\n    return {characters, changePage, isLoading, searchByName, currentPage};\r\n}\r\n \r\nexport default useGetCharacters;","import { useState, useEffect } from 'react';\r\nimport useFetch from './useFetch';\r\nimport useFilters from './useFilters';\r\nimport { URL_LOCATIONS, FILTERS_NAME, FILTERS_PAGE } from '../constants';\r\n\r\nconst useGetLocations = () => {\r\n    const { currentPage, name, changePage, searchByName } = useFilters();\r\n    const { data, isLoading } = useFetch(`${URL_LOCATIONS}?${FILTERS_PAGE}=${currentPage}&${FILTERS_NAME}=${name}`);\r\n    const [locations, setLocations] = useState({\r\n        data: [],\r\n        pages: 0,\r\n        totalCount: 0\r\n    })\r\n\r\n    const updateData = () => {\r\n        setLocations({\r\n            data: data?.results,\r\n            pages: data?.info?.pages,\r\n            totalCount: data?.info?.count\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [data])\r\n\r\n    return {locations, changePage, isLoading, searchByName, currentPage};\r\n}\r\n \r\nexport default useGetLocations;","import { useState, useEffect } from 'react';\r\nimport useFetch from './useFetch';\r\nimport useFilters from './useFilters';\r\nimport { URL_EPISODES, FILTERS_NAME, FILTERS_PAGE } from '../constants';\r\n\r\nconst useGetEpisodes = () => {\r\n    const { currentPage, name, changePage, searchByName } = useFilters();\r\n    const { data, isLoading } = useFetch(`${URL_EPISODES}?${FILTERS_PAGE}=${currentPage}&${FILTERS_NAME}=${name}`);\r\n    const [episodes, setEpisodes] = useState({\r\n        data: [],\r\n        pages: 0,\r\n        totalCount: 0\r\n    })\r\n\r\n    const updateData = () => {\r\n        setEpisodes({\r\n            data: data?.results,\r\n            pages: data?.info?.pages,\r\n            totalCount: data?.info?.count\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [data])\r\n\r\n    return {episodes, changePage, isLoading, searchByName, currentPage};\r\n}\r\n \r\nexport default useGetEpisodes;","import React from 'react';\r\n\r\n// Components\r\nimport Banner from '../components/Banner';\r\nimport { Card, CardImageContainer, CardBody, CardTitle, CardText, CardSection, CardTextGray } from \"../components/Card\";\r\nimport { Container, Section } from '../globalStyles';\r\nimport { Slideshow, TituloSlideshow, Slide } from '../components/Slideshow';\r\n\r\n// Hooks\r\nimport useGetCharacters from '../hooks/useGetCharacters';\r\nimport useGetLocations from '../hooks/useGetLocations';\r\nimport useGetEpisodes from '../hooks/useGetEpisodes';\r\n\r\n\r\nconst Index = () => {\r\n    const {characters} = useGetCharacters();\r\n    const {locations} = useGetLocations();\r\n    const {episodes} = useGetEpisodes();\r\n    \r\n    return (\r\n        <>\r\n            <Section>\r\n                <Banner />\r\n            </Section>\r\n            \r\n            <Section black>\r\n                <Container>\r\n                    <TituloSlideshow>Characters</TituloSlideshow>\r\n                    <Slideshow autoplay>\r\n                        { characters?.data?.map((character, index) => {\r\n                            return (\r\n                                <Slide key={index}>\r\n                                    <Card>\r\n                                        <CardImageContainer>\r\n                                            <img src={character.image} alt={character.name} />\r\n                                        </CardImageContainer>\r\n                                        <CardBody>\r\n                                            <CardTitle>{character.name}</CardTitle>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Slide>\r\n                            );\r\n                        })}\r\n                    </Slideshow>\r\n\r\n                    <br/>\r\n                    \r\n                    <TituloSlideshow>Locations</TituloSlideshow>\r\n                    <Slideshow autoplay velocidad=\"700\">\r\n                        { locations?.data?.map((location, index) => {\r\n                            return (\r\n                                <Slide key={index}>\r\n                                    <Card>\r\n                                        <CardBody>\r\n                                            <CardTitle>{location.name}</CardTitle>\r\n                                            <CardSection>\r\n                                                <CardTextGray>Dimension:</CardTextGray>\r\n                                                <CardText>{location.dimension}</CardText>\r\n                                            </CardSection>\r\n                                            \r\n                                            <CardSection>\r\n                                                <CardTextGray>Type:</CardTextGray>\r\n                                                <CardText>{location.type}</CardText>\r\n                                            </CardSection>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Slide>\r\n                            );\r\n                        })}\r\n                    </Slideshow>\r\n\r\n                    <br/>\r\n\r\n                    <TituloSlideshow>Episodes</TituloSlideshow>\r\n                    <Slideshow autoplay velocidad=\"900\">\r\n                        { episodes?.data?.map((episode, index) => {\r\n                            return (\r\n                                <Slide key={index}>\r\n                                    <Card>\r\n                                        <CardBody>\r\n                                            <CardTitle>{episode.name}</CardTitle>\r\n                                            <CardSection>\r\n                                                <CardTextGray>Episode:</CardTextGray>\r\n                                                <CardText>{episode.episode}</CardText>\r\n                                            </CardSection>\r\n                                            <CardSection>\r\n                                                <CardTextGray>Air date:</CardTextGray>\r\n                                                <CardText>{episode.air_date}</CardText>\r\n                                            </CardSection>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Slide>\r\n                            );\r\n                        })}\r\n                    </Slideshow>\r\n                </Container>\r\n            </Section>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Index;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Pagination = ({changePage, pages, currentPage}) => {\r\n\r\n    // Obtener un arreglo con todos los numeros de pagina\r\n    const arrayNumberOfPages = [];\r\n    for(let i=1; i <= pages ; i++) {\r\n        arrayNumberOfPages.push(i);\r\n    }\r\n\r\n    function goToNextPage() {\r\n        const page = currentPage + 1;\r\n        if(page < pages + 1) {\r\n            changePage(page);\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    function goToPreviousPage() {\r\n        const page = currentPage - 1;\r\n        if(page > 0) {\r\n            changePage(page);\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    function onChangePage(event) {\r\n        const pageNumber = Number(event.target.textContent);\r\n        if(pageNumber >= 1 && pageNumber <= pages ) {\r\n            changePage(pageNumber);\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    const getPaginationGroup = () => {\r\n        if(currentPage < 4) {\r\n            // Devolver arreglo iniciando del 1 hasta el 5\r\n            return arrayNumberOfPages.slice(0,currentPage+4)\r\n        }\r\n        if(currentPage > pages - 4 && pages-7 >= 1) {\r\n            // Devolver arreglo con los 7 numeros ultimos del arreglo hasta el final\r\n            return arrayNumberOfPages.slice(pages-7)\r\n        }\r\n        // Devolver arreglo desde los 3 numeros anteriores y posteriores\r\n        return arrayNumberOfPages.slice(currentPage-4,currentPage+3);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ButtonContainer>\r\n                { currentPage !== 1 &&\r\n                    <Button onClick={goToPreviousPage}>\r\n                        <FontAwesomeIcon icon={faChevronLeft}/>\r\n                    </Button>\r\n                }\r\n\r\n                {getPaginationGroup().map((item, index) => (\r\n                    <Button\r\n                    key={index}\r\n                    onClick={onChangePage}\r\n                    active={currentPage === item ? true : false}\r\n                    >\r\n                        {item}\r\n                    </Button>\r\n                ))}\r\n\r\n                { currentPage !== pages && \r\n                    <Button onClick={goToNextPage}>\r\n                        <FontAwesomeIcon icon={faChevronRight}/>\r\n                    </Button>\r\n                }\r\n            </ButtonContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    width: auto;\r\n\r\n    button:first-child {\r\n        border-top-left-radius: 5px;\r\n        border-bottom-left-radius: 5px;\r\n    }\r\n\r\n    button:last-child {\r\n        border-top-right-radius: 5px;\r\n        border-bottom-right-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: auto;\r\n    background: ${props => props.active ? 'white' : 'rgb(60,62,68)'};\r\n    color: ${props => props.active ? 'black' : 'white'};\r\n    padding: 10px;\r\n    font-size: 1.125rem;\r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n    \r\n    @media (min-width: 768px) {\r\n        &:hover {\r\n            background: white;\r\n            color: black;\r\n        }\r\n    }\r\n`;\r\n \r\nexport default Pagination;","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h2`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    margin-bottom: 10px;\r\n    color: white;\r\n    letter-spacing: 2px;\r\n    text-align: center;\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nexport { Title, TitleContainer };","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SearchBar = ({searchByName}) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const onInputChange = ({ target }) => {\r\n        setSearchValue(target.value)\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchByName(searchValue)\r\n    }\r\n\r\n    return (\r\n        <Search onSubmit={onSubmit}>\r\n            <Input id=\"search\" name=\"search\" type=\"text\" value={searchValue} onChange={onInputChange}/>\r\n            <Icon type=\"button\" onClick={onSubmit}>\r\n                <FontAwesomeIcon icon={faSearch} />\r\n            </Icon>\r\n        </Search>\r\n    );\r\n}\r\n\r\nconst Search = styled.form`\r\n    width: 350px;\r\n    height: 38px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 90%;\r\n    outline: none;\r\n    padding: 5px 15px;\r\n    font-size: 1.2rem;\r\n    border-radius: 5px 0 0 5px;\r\n    border: none;\r\n`;\r\n\r\nconst Icon = styled.button`\r\n    width: 40px;\r\n    height: auto;\r\n    cursor: pointer;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    background: rgb(60,62,68);\r\n    color: white;\r\n    border-radius: 0 5px 5px 0;\r\n`;\r\n \r\nexport default SearchBar;","import React from 'react';\r\n\r\n//Components\r\nimport { Container, Section } from '../globalStyles';\r\nimport { CardsContainer, Card, CardSection, CardImageContainer, CardBody, CardTitle, CardText, CardTextGray, CardStatusIcon } from '../components/Card'\r\nimport Pagination from '../components/Pagination';\r\nimport { Title, TitleContainer } from '../components/Title';\r\n\r\n// Hooks\r\nimport useGetCharacters from '../hooks/useGetCharacters';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\nexport default function Characters() {\r\n    const {characters, changePage, isLoading, searchByName, currentPage} = useGetCharacters();\r\n    const {data, pages} = characters;\r\n\r\n    return(\r\n        <Section black>\r\n            <Container>\r\n                <TitleContainer>\r\n                    <Title>Characters</Title>\r\n                    <SearchBar searchByName={searchByName} />\r\n                </TitleContainer>\r\n                <CardsContainer>\r\n                    { isLoading && <h1>Cargando...</h1> }\r\n                    { !isLoading && data?.map((character) => {\r\n                        return (\r\n                            <Card row key={character.id}>\r\n                                <CardImageContainer>\r\n                                    <img src={character.image} alt={character.name}/>\r\n                                </CardImageContainer>\r\n                                <CardBody>\r\n                                    <CardSection>\r\n                                        <CardTitle>{character.name}</CardTitle>\r\n                                        <CardText><CardStatusIcon status={character.status}/>{character.status} - {character.species}</CardText>\r\n                                    </CardSection>\r\n\r\n                                    <CardSection>\r\n                                        <CardTextGray>Last known location:</CardTextGray>\r\n                                        <CardText>{character.location.name}</CardText>\r\n                                    </CardSection>\r\n                                    \r\n                                    <CardSection>\r\n                                        <CardTextGray>First seen in:</CardTextGray>\r\n                                        <CardText>{character.origin.name}</CardText>\r\n                                    </CardSection>\r\n                                    \r\n                                </CardBody>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </CardsContainer>\r\n                <Pagination \r\n                    changePage={changePage}\r\n                    pages={pages}\r\n                    currentPage={currentPage}\r\n                />\r\n            </Container>\r\n        </Section>\r\n    );\r\n}","import React from 'react';\r\n\r\n//Components\r\nimport { Container, Section } from '../globalStyles';\r\nimport { CardsContainer, Card, CardSection, CardBody, CardTitle, CardText, CardTextGray } from '../components/Card'\r\nimport Pagination from '../components/Pagination';\r\nimport { Title, TitleContainer } from '../components/Title';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\n// Hooks\r\nimport useGetLocation from '../hooks/useGetLocations';\r\n\r\nexport default function Locations() {\r\n    const {locations, changePage, isLoading, searchByName, currentPage} = useGetLocation();\r\n    const {data, pages} = locations;\r\n\r\n    return(\r\n        <Section black>\r\n            <Container>\r\n                <TitleContainer>\r\n                    <Title>Locations</Title>\r\n                    <SearchBar searchByName={searchByName} />\r\n                </TitleContainer>\r\n                <CardsContainer>\r\n                    { isLoading && <h1>Cargando...</h1> }\r\n                    { !isLoading && data?.map((location) => {\r\n                        return (\r\n                            <Card key={location.id}>\r\n                                <CardBody>\r\n                                    <CardTitle>{location.name}</CardTitle>\r\n                                    <CardSection>\r\n                                        <CardTextGray>Dimension:</CardTextGray>\r\n                                        <CardText>{location.dimension}</CardText>\r\n                                    </CardSection>\r\n                                    \r\n                                    <CardSection>\r\n                                        <CardTextGray>Type:</CardTextGray>\r\n                                        <CardText>{location.type}</CardText>\r\n                                    </CardSection>\r\n                                </CardBody>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </CardsContainer>\r\n                <Pagination \r\n                    changePage={changePage}\r\n                    pages={pages}\r\n                    currentPage={currentPage}\r\n                />\r\n            </Container>\r\n        </Section>\r\n    );\r\n}","import React from 'react';\r\n\r\n//Components\r\nimport { Container, Section } from '../globalStyles';\r\nimport { CardsContainer, Card, CardSection, CardBody, CardTitle, CardText, CardTextGray } from '../components/Card';\r\nimport Pagination from '../components/Pagination';\r\nimport { Title, TitleContainer } from '../components/Title';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\n// Hooks\r\nimport useGetEpisodes from '../hooks/useGetEpisodes';\r\n\r\nexport default function Episodes() {\r\n    const {episodes, changePage, isLoading, searchByName, currentPage} = useGetEpisodes();\r\n    const {data, pages} = episodes;\r\n\r\n    return(\r\n        <Section black>\r\n            <Container>\r\n                <TitleContainer>\r\n                    <Title>Episodes</Title>\r\n                    <SearchBar searchByName={searchByName} />\r\n                </TitleContainer>\r\n                <CardsContainer>\r\n                    { isLoading && <h1>Cargando...</h1> }\r\n                    { !isLoading && data?.map((episode) => {\r\n                        return(\r\n                            <Card key={episode.id}>\r\n                                <CardBody>\r\n                                    <CardTitle>{episode.name}</CardTitle>\r\n                                    <CardSection>\r\n                                        <CardTextGray>Episode:</CardTextGray>\r\n                                        <CardText>{episode.episode}</CardText>\r\n                                    </CardSection>\r\n                                    <CardSection>\r\n                                        <CardTextGray>Air date:</CardTextGray>\r\n                                        <CardText>{episode.air_date}</CardText>\r\n                                    </CardSection>\r\n                                </CardBody>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </CardsContainer>\r\n                <Pagination \r\n                    changePage={changePage}\r\n                    pages={pages}\r\n                    currentPage={currentPage}\r\n                />\r\n            </Container>\r\n        </Section>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo.accf5a43.png\";","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// img\r\nimport logo from \"../assets/img/logo.png\";\r\n\r\n//fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navbar = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <Nav>\r\n            <Link to=\"/\">\r\n                <NavLogo src={logo} alt=\"rick and morty\" />\r\n            </Link>\r\n\r\n            <Hamburger onClick={() => setIsOpen(!isOpen)}>\r\n                <FontAwesomeIcon icon={ isOpen ? faTimes : faBars}/>\r\n            </Hamburger>\r\n\r\n            <Menu isOpen={isOpen}>\r\n                <NavLink to=\"/characters\">Characters</NavLink>\r\n                <NavLink to=\"/locations\">Locations</NavLink>\r\n                <NavLink to=\"/episodes\">Episodes</NavLink>\r\n            </Menu>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nconst Nav = styled.div`\r\n    background-color: white;\r\n    padding: 0 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    border-bottom: 1px solid #E2E8F0;\r\n`;\r\n\r\nconst NavLogo = styled.img`\r\n    width: 50px;\r\n`;\r\n\r\nconst Hamburger = styled.div`\r\n    display: none;\r\n    flex-direction: column;\r\n    font-size: 28px;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 768px) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst Menu = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    overflow: hidden;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-height: ${({isOpen}) => isOpen ? \"300px\": \"0\"};\r\n        transition: max-height 0.5s ease;\r\n    }\r\n`;\r\n\r\nconst NavLink = styled(Link)`\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin: 16px 20px;\r\n    color: black;\r\n    font-size: 1.25em;\r\n    cursor: pointer;\r\n`;\r\n \r\nexport default Navbar;","import styled from \"styled-components\";\r\nimport { Container } from \"../globalStyles\";\r\n\r\n//fontawesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Hooks\r\nimport useGetCharacters from \"../hooks/useGetCharacters\";\r\nimport useGetEpisodes from \"../hooks/useGetEpisodes\";\r\nimport useGetLocations from \"../hooks/useGetLocations\";\r\n\r\nconst Footer = () => {\r\n    const { characters: { totalCount:totalCountCharacters } } = useGetCharacters();\r\n    const { locations: { totalCount:totalCountLocations }} = useGetLocations();\r\n    const { episodes: { totalCount:totalCountEpisodes } } = useGetEpisodes();\r\n\r\n    return (\r\n        <ContainerFooter>\r\n            <Container>\r\n                <List>\r\n                    <li>Characters: {totalCountCharacters}</li>\r\n                    <li>Locations: {totalCountLocations}</li>\r\n                    <li>Episodes: {totalCountEpisodes}</li>\r\n                </List>\r\n                <ContainerIcons>\r\n                    <Icon href=\"https://github.com/JesusEfrainGarciaRodriguez\">\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                    </Icon>\r\n                    <Icon href=\"mailto:efraingarcia_86@hotmail.com\">\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                    </Icon>\r\n                </ContainerIcons>\r\n                <Text>by <Underline>Efrain Garcia</Underline> 2021</Text>\r\n            </Container>\r\n        </ContainerFooter>\r\n    );\r\n}\r\n\r\nconst ContainerFooter = styled.footer`\r\n    width: 100%;\r\n    background: rgb(32, 35, 41);\r\n    text-align: center;\r\n    color: rgb(158, 158, 158);\r\n    padding: 50px 0;\r\n`;\r\n\r\nconst ContainerIcons = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 25px 0;\r\n`;\r\n\r\nconst Icon = styled.a`\r\n    font-size: 2.5rem;\r\n    margin: 0 20px;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    width: 90px;\r\n    color: rgb(158, 158, 158);\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        background: white;\r\n        color: rgb(32, 35, 41);\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst List = styled.ul`\r\n    text-decoration: none;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    \r\n    li {\r\n        margin: 0 20px;\r\n    }\r\n`;\r\n\r\nconst Text = styled.p`\r\n    font-size: .875rem;\r\n    padding: 5px;\r\n`;\r\n\r\nconst Underline = styled.span`\r\n    border-bottom: 1px solid;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default Footer;","import GlobalStyle from \"./globalStyles\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\n// Pages\r\nimport Index from \"./pages/Index\";\r\nimport Characters from \"./pages/Characters\";\r\nimport Locations from \"./pages/Locations\";\r\nimport Episodes from \"./pages/Episodes\";\r\n\r\n// Components\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <GlobalStyle />\r\n\r\n      <Navbar />\r\n\r\n      <Switch>\r\n          <Route path=\"/characters\" component={Characters} />\r\n          <Route path=\"/locations\" component={Locations} />\r\n          <Route path=\"/episodes\" component={Episodes} />\r\n          <Route path=\"/\" component={Index} />\r\n      </Switch>\r\n\r\n      <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}